##########################
# Required configuration #
##########################
# SonarQube server url
sonar.host.url=http://localhost:9000

# Project key will also be used for binary file
sonar.projectKey=CICDProject
sonar.projectName=CICDProject
#sonar.projectVersion=3.0.0.9 <-- automatically detected with configuration.plist
# Comment if you have a project with mixed ObjC / Swift
sonar.language=swift

sonar.login=a25c9d7ac414f29856e620eb51f0ffa2900edace

# Project description
sonar.projectDescription= CICD Sample Project

# Path to source directories
sonar.sources=CICDSample

# Destination Simulator to run tests
# As string expected in destination argument of xcodebuild command
# Example = sonar.swift.simulator=platform=iOS Simulator,name=iPhone 8,OS=11.4
sonar.swift.simulator=platform=iOS Simulator,name=iPhone 11,OS=14.4

# Xcode project configuration (.xcodeproj)
# and use the later to specify which project(s) to include in the analysis (comma separated list)
# Specify either xcodeproj or xcodeproj + xcworkspace
sonar.swift.project=CICDSample.xcodeproj
sonar.swift.workspace=CICDSample.xcworkspace

# Specify your appname.
# This will be something like "myApp"
# Use when basename is different from targeted scheme.
# Or when slather fails with 'No product binary found'
#sonar.swift.appName=UBP

# Scheme to build your application
sonar.swift.appScheme=CICDSample-REC

# Configuration to use for your scheme. if you do not specify that the default will be Debug
# sonar.swift.appConfiguration=Debug

##########################
# Optional configuration #
##########################

# Encoding of the source code
sonar.sourceEncoding=UTF-8

# SCM
 sonar.scm.enabled=true
 sonar.scm.url=scm:git:http://194.3.231.99/sonar/

# JUnit report generated by run-sonar.sh is stored in sonar-reports/TEST-report.xml
# Change it only if you generate the file on your own
# The XML files have to be prefixed by TEST- otherwise they are not processed
sonar.junit.reportsPath=reports/

# Lizard report generated by run-sonar.sh is stored in sonar-reports/lizard-report.xml
# Change it only if you generate the file on your own
sonar.swift.lizard.report=reports/lizard-report.xml

# Cobertura report generated by run-sonar.sh is stored in sonar-reports/coverage.xml
# Change it only if you generate the file on your own
sonar.swift.coverage.reportPattern=reports/coverage*.xml

# OCLint report generated by run-sonar.sh is stored in sonar-reports/oclint.xml
# Change it only if you generate the file on your own
sonar.swift.swiftlint.report=reports/*swiftlint.txt

# Change it only if you generate the file on your own
sonar.swift.tailor.report=reports/*tailor.txt

# Paths to exclude from coverage report (tests, 3rd party libraries etc.)
# sonar.swift.excludedPathsFromCoverage=pattern1,pattern2
# sonar.swift.excludedPathsFromCoverage=Pods/*

##########################
# Tailor configuration #
##########################
# Tailor configuration
# -l,--max-line-length=<0-999>                  maximum Line length (in characters)
#    --list-files                               display Swift source files to be analyzed
#    --max-class-length=<0-999>                 maximum Class length (in lines)
#    --max-closure-length=<0-999>               maximum Closure length (in lines)
#    --max-file-length=<0-999>                  maximum File length (in lines)
#    --max-function-length=<0-999>              maximum Function length (in lines)
#    --max-name-length=<0-999>                  maximum Identifier name length (in characters)
#    --max-severity=<error|warning (default)>   maximum severity
#    --max-struct-length=<0-999>                maximum Struct length (in lines)
#    --min-name-length=<1-999>                  minimum Identifier name length (in characters)
sonar.swift.tailor.config=--max-line-length=100 --max-file-length=500 --max-name-length=40 --max-name-length=40 --min-name-length=4
